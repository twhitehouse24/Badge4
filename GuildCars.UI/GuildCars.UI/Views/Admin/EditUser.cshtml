@model GuildCars.UI.Models.EditUserViewModel
@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditUser</h2>
<div class="container">
    @using (Html.BeginForm("EditUser", "Admin", FormMethod.Post))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.users.UserId);
    <div class="col-md-4">
        <div class="form-group">
            <label for="firstName">First Name</label>
            @Html.TextBoxFor(m => m.users.FirstName, new { @class = "form-control", autocomplete = "off", tabindex = 1 })
            <br />@Html.ValidationMessageFor(m => m.users.FirstName, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            @Html.TextBoxFor(m => m.users.Email, new { @class = "form-control", autocomplete = "off", tabindex = 3 })
            <br />@Html.ValidationMessageFor(m => m.users.Email, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="NewPassword">Password</label>

            @Html.PasswordFor(m => m.NewPassword1, new { @class = "form-control", tabindex = 5 })
            <br />@Html.ValidationMessageFor(m => m.NewPassword1, null, new { @class = "text-danger" })
            <span>Leave Passwords blank if not changing.</span>
        </div>
        
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" id="save-button" tabindex="7">
        </div>
    </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="lastName">Last Name</label>
                @Html.TextBoxFor(m => m.users.LastName, new { @class = "form-control", autocomplete = "off", tabindex = 2 })
                <br />@Html.ValidationMessageFor(m => m.users.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Roles</label>
                @{
                    var selectList = new SelectList(new List<SelectListItem>
                                {
                                new SelectListItem{Text="Admin", Value="1"},
                                new SelectListItem{Text="Sales", Value="2",  Selected = true },
                                new SelectListItem{Text="Disabled", Value="0"},
                                }, "Value", "Text");
                }
                @Html.DropDownListFor(m => m.users.RoleId, selectList, new { id = "RoleId", @Name = "RoleId", @class = "form-control" })
                <br />@Html.ValidationMessageFor(m => m.users.RoleId, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                <label for="ConfirmPassword">Confirm Password</label>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", autocomplete = "off", tabindex = 6 })
                <br />@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>


        </div>
    }
</div>
